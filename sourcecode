#include <Servo.h>
#include <LiquidCrystal.h>
#include <MFRC522.h>
 #define SS_PIN 53
#define RST_PIN 5

MFRC522 mfrc522(SS_PIN, RST_PIN); //Creating MFRC522 instance

Servo servo_test,servo_test1; 
                
int angle = 0;    
const int ProxSensor1=38;
const int ProxSensor2=39;
const int ProxSensor3=9;
const int ProxSensor4=8;
const int ProxSensor5=2; //Guest Exit
const int ProxSensor6=3; //Guest Entry
const int ProxSensor7=19; //Resident exit
int count=2;


int flag=1;
int flag1=1;
int flag2=1;
int gflag1=1;


//int gled1 = 16;
//int gled2 = 17;

int brightness = 150;

// initialize the library by associating any needed LCD interface pin
// with the arduino pin number it is connected to
const int rs = 41, en = 40, d4 = 28, d5 = 26, d6 = 24, d7 = 22;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  Serial.begin(9600);
  servo_test.attach(9); //guest
  servo_test1.attach(10); //resident
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // Print a message to the LCD.
  lcd.setCursor(1,0);
  lcd.print("hello, world!");
  pinMode(ProxSensor1, INPUT);
  pinMode(ProxSensor2, INPUT);
  pinMode(ProxSensor3, INPUT);
  pinMode(ProxSensor4, INPUT);
  pinMode(ProxSensor5, INPUT);
  pinMode(ProxSensor6, INPUT);
  pinMode(ProxSensor7, INPUT);
//Guest LED
  //pinMode(gled1, OUTPUT);
  //pinMode(gled2, OUTPUT);
 //RFID
 SPI.begin(); //Initiate SPI Bus
 mfrc522.PCD_Init();
}
void loop() {
 lcd.setCursor(0,1);
  //lcd.print("Hello");
// if (ProxSensor1==HIGH)
  //{
  if(digitalRead(ProxSensor1)==LOW)
  { 
    if(flag==-1){
    count++;
    flag=flag*-1;
    }
    lcd.print(count);
  }
  lcd.clear();
  if(digitalRead(ProxSensor1)==HIGH)
  {
    if(flag==1){
    count--;
    flag=flag*-1;
    }
    lcd.print(count);
  }
lcd.clear();
 if(digitalRead(ProxSensor2)==LOW)
  { 
    if(flag1==-1){
    count++;
    flag1=flag1*-1;
    }   lcd.print(count);
  }
  lcd.clear();
  {
    if(flag1==1){  
      if(digitalRead(ProxSensor2)==HIGH){
          count--;
          flag1=flag1*-1;
      }
    }
    lcd.print(count);
  }
  lcd.clear();

if(count==0)
{
  lcd.setCursor(0,1);
  lcd.print("2 Slots Free");
}
if(count==1)
{
  lcd.setCursor(0,1);
  lcd.print("1 Slot Free");
  
}
else if(count==2)
{
  lcd.setCursor(0,1);
  lcd.print("Parking Full!");
}
//guest entry 

if(digitalRead(ProxSensor5)==LOW){
{
    for(angle = 0; angle <= 90; angle += 1)    // command to move from 0 degrees to 180 degrees 
  {                                  
    servo_test.write(angle);                 //command to rotate the servo to the specified angle
    delay(5);                       
  } 
 
  delay(7000);
  
  for(angle = 90; angle>=0; angle-=5)     // command to move from 180 degrees to 0 degrees 
  {                                
    servo_test.write(angle);              //command to rotate the servo to the specified angle
    delay(5);                       
  } 
  delay(100);
  }
}

//guest exit

if(digitalRead(ProxSensor6)==LOW){
    for(angle = 0; angle < 90; angle += 1)    // command to move from 0 degrees to 180 degrees 
  {                                  
    servo_test.write(angle);                 //command to rotate the servo to the specified angle
    delay(5);                       
  } 
  delay(7000);
   for(angle = 90; angle>=1; angle-=5)     // command to move from 180 degrees to 0 degrees 
  {                                
    servo_test.write(angle);              //command to rotate the servo to the specified angle
    delay(5);                       
  } 
 delay(100);
 }
  
//resident exit

if(digitalRead(ProxSensor7)==LOW){
    for(angle = 90; angle >=0; angle -= 1)    // command to move from 0 degrees to 180 degrees 
  {                                  
    servo_test1.write(angle);                 //command to rotate the servo to the specified angle
    delay(5);                       
  } 
   delay(7000);
  for(angle = 0; angle<=90; angle+=5)     // command to move from 180 degrees to 0 degrees 
  {                                
    servo_test1.write(angle);              //command to rotate the servo to the specified angle
    delay(5);                       
  } 

    delay(100);
 }
//resident entry with RFID Access
//Looking for new cards 
if(!mfrc522.PICC_IsNewCardPresent())
{
  return;
}
//Select one card
if(!mfrc522.PICC_ReadCardSerial())
{
  return;
}
Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.println();
  Serial.print("Message : ");
  content.toUpperCase();
  if (content.substring(1) == "76 75 28 83") //change here the UID of the card/cards that you want to give access
  {
    lcd.clear();
     lcd.setCursor(0, 1);
    lcd.print("ACCESS GRANTED");
    lcd.setCursor(1,0);
    lcd.print("WELCOME");
  for(angle = 100; angle>=1; angle-=1)    // command to move from 0 degrees to 180 degrees 
  {                                  
    servo_test1.write(angle);                 //command to rotate the servo to the specified angle
    delay(5);                       
  } 
 delay(7000);
   for(angle = 0; angle<=100; angle+=1)     // command to move from 180 degrees to 0 degrees 
  {                                
    servo_test1.write(angle);              //command to rotate the servo to the specified angle
    delay(5);                       
  } 
    delay(2000);
  }
   else   {
    lcd.clear();
  lcd.setCursor(1,0);
    lcd.print("ACCESS DENIED");
    lcd.setCursor(0,1); lcd.print("NO ENTRY!");
    delay(2000);}}
